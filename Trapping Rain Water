# https://leetcode.com/problems/trapping-rain-water/

class Solution:
    def trap(self, height: List[int]) -> int:
        left = maxLeft = maxRight = ans = 0
        right = len(height)-1
        while left < right:
            if height[left] < height[right]:
                if height[left] >= maxLeft:
                    maxLeft = height[left]
                else:
                    ans += (maxLeft - height[left])
                left += 1
            else:
                if height[right] >= maxRight:
                    maxRight = height[right]
                else:
                    ans += maxRight-height[right]
                right -= 1
        return ans;
        
#java
class Solution {
    public int trap(int[] height) {
        int left = 0, right = height.length - 1, maxLeft = 0, maxRight = 0, trappedWater = 0;
        
        while (left < right) {
            if (height[left] > maxLeft) maxLeft = height[left];
            if (height[right] > maxRight) maxRight = height[right];
            if (height[right] < height[left]) {
                trappedWater += maxRight - height[right--];
            } else {
                trappedWater += maxLeft - height[left++];
            }
        }
        
        return trappedWater;
    }
}
